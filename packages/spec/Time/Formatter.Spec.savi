:class Time.Formatter.Spec
  :is Spec
  :const describes: "Time.Formatter"

  :it "can correctly format time"
    t = Time.utc(2014, 1, 2, 3, 4, 5, 6000000)
    t2 = Time.utc(2014, 1, 2, 15, 4, 5, 6000000)
    t3 = Time.utc(2014, 1, 2, 12, 4, 5, 6000000)

    assert: t.format("%Y") == "2014"
    assert: Time.utc(1, 1, 2, 3, 4, 5, 6).format("%Y") == "0001"

    assert: t.format("%C") == "20"
    assert: t.format("%y") == "14"
    assert: t.format("%m") == "01"
    assert: t.format("%_m") == " 1"
    assert: t.format("%_%_m2") == "%_ 12"
    assert: t.format("%-m") == "1"
    assert: t.format("%-%-m2") == "%-12"
    assert: t.format("%B") == "January"

    // assert: t.format("%^B") == "JANUARY"
    // assert: t.format("%^%^B2") == "%^JANUARY2"

    assert: t.format("%b") == "Jan"

    // assert: t.format("%^b") == "JAN"

    assert: t.format("%h") == "Jan"
    // assert: t.format("%^h") == "JAN"
    assert: t.format("%d") == "02"
    assert: t.format("%-d") == "2"
    assert: t.format("%e") == " 2"
    assert: t.format("%j") == "002"
    assert: t.format("%H") == "03"

    assert: t.format("%k") == " 3"
    assert: t2.format("%k") == "15"

    assert: t.format("%I") == "03"
    assert: t2.format("%I") == "03"
    assert: t3.format("%I") == "12"

    assert: t.format("%l") == " 3"
    assert: t2.format("%l") == " 3"
    assert: t3.format("%l") == "12"

    // Note: we purposely match %p to am/pm and %P to AM/PM (makes more sense)
    assert: t.format("%p") == "am"
    assert: t2.format("%p") == "pm"

    assert: t.format("%P") == "AM"
    assert: t2.format("%P") == "PM"

    assert: t.format("%M") == "04"
    assert: t.format("%S") == "05"
    assert: t.format("%L") == "006"
    assert: t.format("%N") == "006000000"
    assert: t.format("%3N") == "006"
    assert: t.format("%6N") == "006000"
    assert: t.format("%9N") == "006000000"

    // assert: t.format("%z") == "+0000"
    // assert: t.format("%:z") == "+00:00"
    // assert: t.format("%::z") == "+00:00:00"

    assert: t.format("%A") == "Thursday"
    // assert: t.format("%^A") == "THURSDAY"
    assert: t.format("%a") == "Thu"
    // assert: t.format("%^a") == "THU"
    assert: t.format("%u") == "4"
    assert: t.format("%w") == "4"

    t3 = Time.utc(2014, 1, 5) // A Sunday
    assert: t3.format("%u") == "7"
    assert: t3.format("%w") == "0"

    assert: Time.utc(1985, 4, 12).format("%G-W%V-%u") == "1985-W15-5"
    assert: Time.utc(2005, 1, 1).format("%G-W%V-%u") == "2004-W53-6"
    assert: Time.utc(2005, 1, 2).format("%G-W%V-%u") == "2004-W53-7"
    assert: Time.utc(2005, 12, 31).format("%G-W%V-%u") == "2005-W52-6"
    assert: Time.utc(2006, 1, 1).format("%G-W%V-%u") == "2005-W52-7"
    assert: Time.utc(2006, 1, 2).format("%G-W%V-%u") == "2006-W01-1"
    assert: Time.utc(2006, 12, 31).format("%G-W%V-%u") == "2006-W52-7"
    assert: Time.utc(2007, 1, 1).format("%G-W%V-%u") == "2007-W01-1"
    assert: Time.utc(2007, 12, 30).format("%G-W%V-%u") == "2007-W52-7"
    assert: Time.utc(2007, 12, 31).format("%G-W%V-%u") == "2008-W01-1"
    assert: Time.utc(2008, 1, 1).format("%G-W%V-%u") == "2008-W01-2"
    assert: Time.utc(2008, 12, 28).format("%G-W%V-%u") == "2008-W52-7"
    assert: Time.utc(2008, 12, 29).format("%G-W%V-%u") == "2009-W01-1"
    assert: Time.utc(2008, 12, 30).format("%G-W%V-%u") == "2009-W01-2"
    assert: Time.utc(2008, 12, 31).format("%G-W%V-%u") == "2009-W01-3"
    assert: Time.utc(2009, 1, 1).format("%G-W%V-%u") == "2009-W01-4"
    assert: Time.utc(2009, 12, 31).format("%G-W%V-%u") == "2009-W53-4"
    assert: Time.utc(2010, 1, 1).format("%G-W%V-%u") == "2009-W53-5"
    assert: Time.utc(2010, 1, 2).format("%G-W%V-%u") == "2009-W53-6"
    assert: Time.utc(2010, 1, 3).format("%G-W%V-%u") == "2009-W53-7"
    assert: Time.utc(1985, 4, 12).format("%g-W%V-%u") == "85-W15-5"

    assert: t.format("%%") == "%"
    assert: t.format("%c") == t.format("%a %b %e %T %Y")
    assert: t.format("%D") == t.format("%m/%d/%y")
    assert: t.format("%F") == t.format("%Y-%m-%d")
    // TODO %v
    assert: t.format("%x") == t.format("%D")
    assert: t.format("%X") == t.format("%T")
    assert: t.format("%r") == t.format("%I:%M:%S %P")
    assert: t.format("%R") == t.format("%H:%M")
    assert: t.format("%T") == t.format("%H:%M:%S")

    assert: t.format("%Y-%m-hello") == "2014-01-hello"

    t = Time.utc(2014, 1, 2, 3, 4, 5, 6)
    assert: t.format("%s") == "1388631845"

