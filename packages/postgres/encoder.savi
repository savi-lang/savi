:primitive MessageEncoder
  :fun startup_message(user String'val, database String'val, protocol_version = U32[3].bit_shl(16)) Bytes'iso
    msg = Bytes.new_iso
    msg.push_native_u32(0) // message length placeholder
    msg.push_native_u32(protocol_version.native_to_be)
    msg << b"user"
    msg.push(0)
    msg << user.as_bytes
    msg.push(0)
    msg << b"database"
    msg.push(0)
    msg << database.as_bytes
    msg.push(0)
    msg.push(0)
    try msg.write_native_u32!(0, msg.size.u32.native_to_be)
    --msg

  :fun query_message(query String'val) Bytes'iso
    msg = Bytes.new_iso
    msg.push('Q')
    msg.push_native_u32(0) // message length placeholder
    msg << query.as_bytes
    msg.push(0)
    try msg.write_native_u32!(1, (msg.size - 1).u32.native_to_be)
    --msg

