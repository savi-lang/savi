:module _FFI
  :ffi puts(string CPointer(U8)) I32
  :ffi strlen(string CPointer(U8)) USize
  :ffi memset(pointer CPointer(U8), char I32, count USize) None
  :ffi variadic snprintf(buffer CPointer(U8), buffer_size I32, fmt CPointer(U8)) I32

  :ffi pony_exitcode(code I32) None
  :ffi pony_os_stdout_setup() None
  :ffi pony_os_stdout() CPointer(None)'ref
  :ffi pony_os_stderr() CPointer(None)'ref
  :ffi pony_os_std_print(
    fp CPointer(None)'ref, buffer CPointer(U8), length USize
  ) None
  :ffi pony_os_std_write(
    fp CPointer(None)'ref, buffer CPointer(U8), length USize
  ) None
  :ffi pony_os_std_flush(fp CPointer(None)'ref) None

:module _FFI.Cast(A, B)
  :: An FFI-only utility function for bit-casting type A to B.
  ::
  :: This is only meant to be used for pointer types, and will
  :: fail badly if either A or B is not an ABI pointer type
  ::
  :: Obviously this utility function makes it easy to break
  :: memory safety, so it should be used with great care.
  ::
  :: Being private, It is only accessible from within the core library,
  :: though other libraries can set up similar mechanisms as well,
  :: provided that they are explicitly allowed by the root manifest to use FFI.
  :ffi pointer(input A) B
    :foreign_name savi_cast_pointer
