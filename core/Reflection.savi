:class val ReflectionOfType(A)
  :: The string used in compiler messages to represent the type with capability.
  :: If the capability is the same as the default for that type, it will be
  :: omitted for brevity. Type arguments will also be included if present.
  ::
  :: $ (reflection_of_type "example").string
  :: > "String"
  :: $ (reflection_of_type String.new).string
  :: > "String'ref"
  :: $ (reflection_of_type Array(U8).new).string
  :: > "Array(U8)"
  :let string String: ""

  :let features Array(ReflectionFeatureOfType(A)): []

  :is IntoString
  :fun into_string_space USize: @string.size
  :fun into_string(out String'ref) None: @string.into_string(out)

:class val ReflectionFeatureOfType(A)
  :let name String: ""
  :let tags Array(String): []
  :let mutator (ReflectionMutatorOfType(A) | None): None

  :fun maybe_call_mutator(a A) Bool
    try (
      @mutator.not!(None).call(--a)
      True
    |
      False
    )

:trait non ReflectionMutatorOfType(A)
  :fun non call(a A) None: None
